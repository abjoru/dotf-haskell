# This is a basic workflow to help you get started with Actions

name: DotF Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        ghc: ["8.8.4"]
        cabal: ["3.2"]

    steps:
      - name: Setup Haskell
        uses: actions/setup-haskell@v1.1.4
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cabal Freeze
        run: |
          cabal freeze

      - name: Clone Project
        uses: actions/checkout@v2

      - name: Set Tag
        uses: olegtarasov/get-tag@v2
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build Artifact
        run: |
          mkdir dist
          cabal install exe:dotf --install-method=copy --overwrite-policy=always --installdir=dist

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-${{ runner.os }}
          path: dist

  release:
    name: Create GitHub Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Fetch MacOS Build
        uses: actions/download-artifact@v1
        with:
          name: dist-macOS
          path: dist-macOS

      - name: Fetch Linux Build
        uses: actions/download-artifact@v1
        with:
          name: dist-linux
          path: dist-linux

      - name: Upload MacOS Build
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-macOS/dotf
          asset_name: dotf-${{ steps.tag.outputs.tag }}-${{ runner.os }}-ghc-${{ matrix.ghc }}
          asset_content_type: application/octet-stream
