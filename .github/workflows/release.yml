name: DotF Release

on:
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: release ${{ github.ref }}
          body_path: ./ChangeLog.md
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    name: Build
    needs: [create_release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: dotf
            asset_name: dotf-linux-bin
          - os: macos-latest
            artifact_name: dotf
            asset_name: dotf-darwin-bin

    steps:
      - name: Clone Project
        uses: actions/checkout@v2

      - name: Setup Haskell
        uses: actions/setup-haskell@v1.1.4
        id: setup-haskell-cabal

      - name: Freeze Cabal
        run: |
          cabal freeze

      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build Artifact
        run: |
          mkdir dist
          cabal install exe:dotf --install-method=copy --overwrite-policy=always --installdir=dist

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: applications/octet-stream

